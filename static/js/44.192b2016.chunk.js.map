{"version":3,"file":"static/js/44.192b2016.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/react-intl/lib/src/components/useIntl.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/auth/src/core/errors.ts","../node_modules/@firebase/auth/src/core/util/log.ts","../node_modules/@firebase/auth/src/core/util/assert.ts","../node_modules/@firebase/auth/src/core/util/instantiator.ts","../node_modules/@firebase/auth/src/core/auth/initialize.ts","../node_modules/@firebase/auth/src/core/util/location.ts","../node_modules/@firebase/auth/src/core/util/delay.ts","../node_modules/@firebase/auth/src/core/util/navigator.ts","../node_modules/@firebase/auth/src/core/util/emulator.ts","../node_modules/@firebase/auth/src/core/util/fetch_provider.ts","../node_modules/@firebase/auth/src/api/errors.ts","../node_modules/@firebase/auth/src/api/index.ts","../node_modules/@firebase/auth/src/api/account_management/account.ts","../node_modules/@firebase/auth/src/core/util/time.ts","../node_modules/@firebase/auth/src/core/user/id_token_result.ts","../node_modules/@firebase/auth/src/core/user/invalidation.ts","../node_modules/@firebase/auth/src/core/user/proactive_refresh.ts","../node_modules/@firebase/auth/src/core/user/user_metadata.ts","../node_modules/@firebase/auth/src/core/user/reload.ts","../node_modules/@firebase/auth/src/api/authentication/token.ts","../node_modules/@firebase/auth/src/core/user/token_manager.ts","../node_modules/@firebase/auth/src/core/user/user_impl.ts","../node_modules/@firebase/auth/src/core/persistence/in_memory.ts","../node_modules/@firebase/auth/src/core/persistence/persistence_user_manager.ts","../node_modules/@firebase/auth/src/core/util/browser.ts","../node_modules/@firebase/auth/src/core/util/version.ts","../node_modules/@firebase/auth/src/core/auth/middleware.ts","../node_modules/@firebase/auth/src/core/auth/auth_impl.ts","../node_modules/@firebase/auth/src/core/auth/emulator.ts","../node_modules/@firebase/auth/src/core/credentials/auth_credential.ts","../node_modules/@firebase/auth/src/api/account_management/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_link.ts","../node_modules/@firebase/auth/src/core/credentials/email.ts","../node_modules/@firebase/auth/src/api/authentication/idp.ts","../node_modules/@firebase/auth/src/core/credentials/oauth.ts","../node_modules/@firebase/auth/src/api/authentication/sms.ts","../node_modules/@firebase/auth/src/core/credentials/phone.ts","../node_modules/@firebase/auth/src/core/action_code_url.ts","../node_modules/@firebase/auth/src/core/providers/email.ts","../node_modules/@firebase/auth/src/core/providers/federated.ts","../node_modules/@firebase/auth/src/core/providers/oauth.ts","../node_modules/@firebase/auth/src/core/providers/facebook.ts","../node_modules/@firebase/auth/src/core/providers/google.ts","../node_modules/@firebase/auth/src/core/providers/github.ts","../node_modules/@firebase/auth/src/core/credentials/saml.ts","../node_modules/@firebase/auth/src/core/providers/twitter.ts","../node_modules/@firebase/auth/src/api/authentication/sign_up.ts","../node_modules/@firebase/auth/src/core/user/user_credential_impl.ts","../node_modules/@firebase/auth/src/core/strategies/anonymous.ts","../node_modules/@firebase/auth/src/mfa/mfa_error.ts","../node_modules/@firebase/auth/src/core/user/link_unlink.ts","../node_modules/@firebase/auth/src/core/user/reauthenticate.ts","../node_modules/@firebase/auth/src/core/strategies/credential.ts","../node_modules/@firebase/auth/src/core/index.ts","../node_modules/@firebase/auth/src/api/account_management/mfa.ts","../node_modules/@firebase/auth/src/mfa/mfa_user.ts","../node_modules/@firebase/auth/src/core/persistence/index.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/browser.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/local_storage.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/session_storage.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/promise.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/receiver.ts","../node_modules/@firebase/auth/src/core/util/event_id.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/sender.ts","../node_modules/@firebase/auth/src/platform_browser/auth_window.ts","../node_modules/@firebase/auth/src/platform_browser/util/worker.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/indexed_db.ts","../node_modules/@firebase/auth/src/api/authentication/mfa.ts","../node_modules/@firebase/auth/src/platform_browser/load_js.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_loader.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_verifier.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/phone.ts","../node_modules/@firebase/auth/src/platform_browser/providers/phone.ts","../node_modules/@firebase/auth/src/core/util/resolver.ts","../node_modules/@firebase/auth/src/core/strategies/idp.ts","../node_modules/@firebase/auth/src/core/strategies/abstract_popup_redirect_operation.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/popup.ts","../node_modules/@firebase/auth/src/core/strategies/redirect.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/redirect.ts","../node_modules/@firebase/auth/src/core/auth/auth_event_manager.ts","../node_modules/@firebase/auth/src/api/project_config/get_project_config.ts","../node_modules/@firebase/auth/src/core/util/validate_origin.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/gapi.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/iframe.ts","../node_modules/@firebase/auth/src/platform_browser/util/popup.ts","../node_modules/@firebase/auth/src/core/util/handler.ts","../node_modules/@firebase/auth/src/platform_browser/popup_redirect.ts","../node_modules/@firebase/auth/src/platform_browser/mfa/assertions/phone.ts","../node_modules/@firebase/auth/src/mfa/mfa_assertion.ts","../node_modules/@firebase/auth/src/core/auth/firebase_internal.ts","../node_modules/@firebase/auth/src/platform_browser/index.ts","../node_modules/@firebase/auth/src/core/auth/register.ts","../node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_IDP_RESPONSE]:\n      'The supplied auth credential is malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED);\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identitfy the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nfunction extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  HttpMethod,\n  HttpHeader\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum Endpoint {\n  TOKEN = '/v1/token'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    _assert(\n      !this.accessToken || this.refreshToken,\n      auth,\n      AuthErrorCode.TOKEN_EXPIRED\n    );\n\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\n\nimport {\n  APIUserInfo,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert } from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    return new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _FirebaseService, FirebaseApp } from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport { _assert } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport { AuthMiddlewareQueue } from './middleware';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => cb(this.currentUser));\n\n    if (typeof nextOrObserver === 'function') {\n      return subscription.addObserver(nextOrObserver, error, completed);\n    } else {\n      return subscription.addObserver(nextOrObserver);\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n    return headers;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { updateEmailPassword } from '../../api/account_management/email_and_password';\nimport { signInWithPassword } from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return signInWithPassword(auth, {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return updateEmailPassword(auth, {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe\n} from '../model/public_types';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment is supported\n */\nexport type MfaEnrollment = PhoneMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user.auth\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    const idTokenResponse = await _logoutIfInvalidated(\n      this.user,\n      withdrawMfa(this.user.auth, {\n        idToken,\n        mfaEnrollmentId\n      })\n    );\n    // Remove the second factor from the user's list.\n    this.enrolledFactors = this.enrolledFactors.filter(\n      ({ uid }) => uid !== mfaEnrollmentId\n    );\n    // Depending on whether the backend decided to revoke the user's session,\n    // the tokenResponse may be empty. If the tokens were not updated (and they\n    // are now invalid), reloading the user will discover this and invalidate\n    // the user's state accordingly.\n    await this.user._updateTokensIfNecessary(idTokenResponse);\n    try {\n      await this.user.reload();\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !== `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n      ) {\n        throw e;\n      }\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    for (const { fbase_key: key, value } of result) {\n      keysInResult.add(key);\n      if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n        this.notifyListeners(key, value as PersistenceValue);\n        keys.push(key);\n      }\n    }\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\nimport { _createError } from '../core/util/assert';\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  // TODO: consider adding timeout support & cancellation\n  return new Promise((resolve, reject) => {\n    const el = document.createElement('script');\n    el.setAttribute('src', url);\n    el.onload = resolve;\n    el.onerror = e => {\n      const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n      error.customData = e as unknown as Record<string, unknown>;\n      reject(error);\n    };\n    el.type = 'text/javascript';\n    el.charset = 'UTF-8';\n    getScriptParentElement().appendChild(el);\n  });\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl)) {\n      return Promise.resolve(_window().grecaptcha!);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha;\n\n        if (!recaptcha) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${RECAPTCHA_BASE}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   */\n  constructor(\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    },\n    authExtern: Auth\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  await _link(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay.\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 2000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport { _assertInstanceOf } from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Link using a redirect.\n * await linkWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): string {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    _setWindowLocation(\n      _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId)\n    );\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncUrl = getExperimentalSetting('authTokenSyncURL');\n  if (authTokenSyncUrl) {\n    const mintCookie = mintCookieFactory(authTokenSyncUrl);\n    beforeAuthStateChanged(auth, mintCookie, () =>\n      mintCookie(auth.currentUser)\n    );\n    onIdTokenChanged(auth, user => mintCookie(user));\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nregisterAuth(ClientPlatform.BROWSER);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const { apiKey, authDomain } = app.options;\n        return ((app, heartbeatServiceProvider) => {\n          _assert(\n            apiKey && !apiKey.includes(':'),\n            AuthErrorCode.INVALID_API_KEY,\n            { appName: app.name }\n          );\n          // Auth domain is optional if IdP sign in isn't being used\n          _assert(!authDomain?.includes(':'), AuthErrorCode.ARGUMENT_ERROR, {\n            appName: app.name\n          });\n          const config: ConfigInternal = {\n            apiKey,\n            authDomain,\n            clientPlatform,\n            apiHost: DefaultConfig.API_HOST,\n            tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n            apiScheme: DefaultConfig.API_SCHEME,\n            sdkClientVersion: _getClientVersion(clientPlatform)\n          };\n\n          const authInstance = new AuthImpl(\n            app,\n            heartbeatServiceProvider,\n            config\n          );\n          _initializeAuthInstance(authInstance, deps);\n\n          return authInstance;\n        })(app, heartbeatServiceProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.0\", \"\"), r(\"firestore-lite\", \"3.8.0\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","getUA","navigator","isMobileCordova","window","test","isBrowserExtension","runtime","chrome","browser","undefined","id","isReactNative","isIE","ua","indexOf","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","getDefaultsFromGlobal","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultEmulatorHost","productName","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","getExperimentalSetting","name","Deferred","promise","callback","value","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","FirebaseError","code","customData","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","key","isEmpty","obj","hasOwnProperty","call","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","querystring","querystringParams","params","forEach","arrayVal","encodeURIComponent","entries","querystringDecode","split","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","task","then","forEachObserver","observer","next","complete","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","finalError","observerCount","fn","sendOne","err","getModularInstance","_delegate","useIntl","intl","React","Context","invariantIntlContext","asyncGeneratorStep","gen","_next","_throw","arg","done","_asyncToGenerator","args","arguments","apply","_superPropBase","object","property","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","_regeneratorRuntime","exports","Op","hasOwn","defineProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","__proto__","awrap","async","iter","val","reverse","pop","skipTempReset","prev","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","IDBTransaction","objectStoreNames","objectStore","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","all","oldTraps","PlatformLoggerServiceImpl","container","getProviders","map","provider","component","getComponent","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","appName","_apps","_components","_addComponent","app","addComponent","debug","_registerComponent","componentName","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","_isDeleted","isDeleted","SDK_VERSION","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","toISOString","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","instantiationMode","mode","multipleInstances","props","serviceProps","onInstanceCreated","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","isComponentEager","instanceDeferred","delete","services","from","INTERNAL","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","_a","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","_logLevel","_logHandler","_userLogHandler","_prodErrorMap","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","logClient","_logError","msg","_fail","authOrCode","rest","createErrorInternal","_createError","_errorWithCustomMessage","auth","errorMap","fullParams","_errorFactory","_assert","assertion","debugFail","failure","debugAssert","instanceCache","_getInstance","cls","Function","initializeAuth","deps","initialOptions","getOptions","initialize","_getCurrentUrl","location","href","_isHttpOrHttps","_getCurrentScheme","protocol","Delay","shortDelay","longDelay","isMobile","onLine","Math","min","_emulatorUrl","path","emulator","startsWith","FetchProvider","fetchImpl","headersImpl","responseImpl","fetch","Headers","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","tenantId","_performApiRequest","customErrorMap","_performFetchWithErrorHandling","body","query","apiKey","_getAdditionalHeaders","headers","languageCode","_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","networkTimeout","NetworkTimeout","race","response","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","serverErrorCode","serverErrorMessage","authError","toLowerCase","_performSignInRequest","serverResponse","_serverResponse","apiScheme","timer","setTimeout","clearTimeout","errorParams","email","phoneNumber","_tokenResponse","deleteAccount","getAccountInfo","utcTimestampToDateString","utcTimestamp","Number","getTime","toUTCString","user","forceRefresh","userInternal","getIdToken","claims","_parseToken","signInProvider","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","algorithm","signature","toString","_logoutIfInvalidated","isUserInvalidated","currentUser","signOut","ProactiveRefresh","errorBackoff","isRunning","schedule","timerId","wasError","interval","stsTokenManager","max","getInterval","iteration","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","metadata","_reloadWithoutSaving","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","extractProviderData","providerData","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","localId","photoURL","photoUrl","emailVerified","assign","_persistUserIfCurrent","_notifyListenersIfCurrent","original","newData","deduped","o","n","providerId","rawId","requestStsToken","refreshToken","tokenApiHost","accessToken","access_token","expiresIn","expires_in","refresh_token","StsTokenManager","parsedToken","_tokenExpiresIn","updateTokensAndExpiration","isExpired","refresh","oldToken","expiresInSec","toJSON","manager","assertStringOrUndefined","UserImpl","opt","__rest","proactiveRefresh","getToken","getIdTokenResult","reload","userInfo","_copy","_assign","_clone","reloadListener","reloadUserInfo","_start","_stop","tokensRefreshed","updateFromServerResponse","clearRefreshToken","_redirectEventId","plainObjectTokenManager","fromJSON","idTokenResponse","InMemoryPersistence","storage","_key","_listener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","_addListener","_set","blob","_fromJSON","_remove","newPersistence","getCurrentUser","removeCurrentUser","setCurrentUser","_removeListener","persistenceHierarchy","_isAvailable","availablePersistences","selectedPersistence","userToMigrate","migrationHierarchy","_shouldAllowMigration","_getBrowserName","userAgent","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","matches","_isIOS","_isIOSStandalone","standalone","_isIE10","documentMode","_isMobileBrowser","_getClientVersion","clientPlatform","reportedPlatform","frameworks","reportedFrameworks","AuthMiddlewareQueue","onAbort","wrappedCallback","queue","nextUser","onAbortStack","beforeStateCallback","originalMessage","AuthImpl","heartbeatServiceProvider","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","settings","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","popupRedirectResolver","_popupRedirectResolver","_initializationPromise","_deleted","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","lastNotifiedUid","_isInitialized","assertedPersistence","_currentUser","_updateCurrentUser","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","redirectUser","storedUserEventId","tryRedirectSignIn","directlySetCurrentUser","runMiddleware","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_completeRedirectFn","_setRedirectUser","navigatorLanguage","languages","language","_getUserLanguage","userExtern","skipBeforeStateCallbacks","notifyAuthListeners","redirectPersistenceManager","setPersistence","completed","registerStateListener","pushCallback","redirectManager","resolver","_redirectPersistence","isProactiveRefreshEnabled","_startProactiveRefresh","_stopProactiveRefresh","currentUid","subscription","cb","addObserver","action","framework","_getFrameworks","getHeartbeatsHeader","heartbeatsHeader","_castAuth","connectAuthEmulator","authInternal","disableWarnings","extractProtocol","authority","exec","substr","hostAndPort","bracketedIPv6","parsePort","extractHostAndPort","portStr","emulatorConfig","freeze","attachBanner","el","createElement","sty","style","innerText","position","width","backgroundColor","border","color","bottom","left","margin","zIndex","textAlign","classList","appendChild","readyState","emitEmulatorWarning","protocolEnd","AuthCredential","signInMethod","_auth","_idToken","updateEmailPassword","signInWithPassword","signInWithEmailLink","signInWithEmailLinkForLinking","EmailAuthCredential","_email","_password","_tenantId","password","returnSecureToken","oobCode","_getIdTokenResponse","_fromEmailAndPassword","_fromEmailAndCode","signInWithIdp","OAuthCredential","pendingToken","secret","nonce","buildRequest","autoCreate","requestUri","postBody","cred","oauthToken","oauthTokenSecret","sendPhoneVerificationCode","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","apiRequest","operation","PhoneAuthCredential","signInWithPhoneNumber","_makeVerificationRequest","linkWithPhoneNumber","verifyPhoneNumberForExisting","verificationId","verificationCode","sessionInfo","ActionCodeURL","actionLink","searchParams","parseMode","continueUrl","link","doubleDeepLink","iOSDeepLink","parseDeepLink","EmailAuthProvider","PROVIDER_ID","emailLink","actionCodeUrl","parseLink","FederatedAuthProvider","defaultLanguageCode","customOAuthParameters","customParameters","BaseOAuthProvider","scopes","scope","FacebookAuthProvider","_fromParams","FACEBOOK_SIGN_IN_METHOD","userCredential","credentialFromTaggedObject","tokenResponse","oauthAccessToken","credential","GoogleAuthProvider","addScope","GOOGLE_SIGN_IN_METHOD","oauthIdToken","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","UserCredentialImpl","operationType","_fromIdTokenResponse","providerIdForResponse","userCred","_updateTokensIfNecessary","MultiFactorError","_processCredentialSavingMfaContextIfNecessary","_getReauthenticationResolver","_fromErrorAndOperation","_link","bypassAuthState","_linkToIdToken","_forOperation","_reauthenticate","parsed","_signInWithCredential","onIdTokenChanged","beforeAuthStateChanged","startEnrollPhoneMfa","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","BrowserLocalPersistence","localStorage","poll","onStorageEvent","listeners","localCache","pollTimer","safariLocalStorageNotSynced","_iframeCannotSyncWebStorage","top","_isIframe","fallbackToPolling","oldValue","detachListener","stopPolling","storedValue","triggerListeners","notifyListeners","forAllChangedKeys","_oldValue","listener","setInterval","StorageEvent","clearInterval","startPolling","attachListener","size","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","_allSettled","promises","fulfilled","reason","Receiver","eventTarget","handleEvent","messageEvent","eventId","eventType","handlers","handlersMap","ports","postMessage","status","handler","origin","eventHandler","receivers","isListeningto","newInstance","_generateEventId","prefix","digits","random","floor","Sender","messageChannel","port1","onMessage","timeout","MessageChannel","start","ackTimer","completionTimer","port2","finally","removeMessageHandler","_window","_isWorker","_getActiveServiceWorker","serviceWorker","ready","registration","active","_getServiceWorkerController","controller","DB_NAME","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","getObjectStore","isReadWrite","_deleteDatabase","toPromise","_openDatabase","keyPath","contains","_putObject","getObject","_deleteObject","IndexedDBLocalPersistence","_workerInitializationPromise","initializeServiceWorkerMessaging","op","numAttempts","_openDb","initializeReceiver","initializeSender","_subscribe","_origin","_poll","keyProcessed","_data","activeServiceWorker","sender","_send","results","serviceWorkerReceiverAvailable","write","pendingWrites","_withPendingWrite","_withRetries","notifyServiceWorker","getAllRequest","getAll","keysInResult","fbase_key","localKey","indexedDBLocalPersistence","startSignInPhoneMfa","_loadJS","setAttribute","onload","charset","getElementsByTagName","getScriptParentElement","_generateCallbackName","jsHelpers._generateCallbackName","RECAPTCHA_VERIFIER_TYPE","_verifyPhoneNumber","verifier","verify","recaptchaToken","phoneInfoOptions","session","phoneEnrollmentInfo","phoneSessionInfo","mfaEnrollmentId","multiFactorHint","multiFactorUid","mfaPendingCredential","phoneSignInInfo","phoneResponseInfo","_reset","PhoneAuthProvider","phoneOptions","applicationVerifier","_fromVerification","_fromTokenResponse","_withDefaultResolver","resolverOverride","IdpCredential","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_linkUser","AbstractPopupRedirectOperation","pendingPromise","eventManager","onExecution","registerConsumer","urlResponse","getIdpTask","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","PopupOperation","authWindow","pollId","currentPopupAction","cancel","execute","_openPopup","associatedEvent","_originValidation","_isIframeWebStorageSupported","isSupported","pollUserCancellation","closed","redirectOutcomeMap","RedirectAction","readyOutcome","_getAndClearPendingRedirectStatus","_redirectUserForId","pendingRedirectKey","resolverPersistence","hasPendingRedirect","_getRedirectResult","resolverExtern","AuthEventManager","cachedEventUids","consumers","lastProcessedEventTime","authEventConsumer","queuedRedirectEvent","isEventForConsumer","sendToConsumer","saveEventToCache","hasEventBeenHandled","handled","consumer","hasHandledPotentialRedirect","isNullRedirectEvent","isRedirectEvent","onError","onAuthEvent","eventIdMatches","clear","eventUid","v","_getProjectConfig","IP_ADDRESS_REGEX","HTTP_REGEX","authorizedDomains","domain","matchDomain","expected","currentUrl","URL","hostname","ceUrl","escapedDomainPattern","RegExp","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","L","CP","cachedGApiLoader","_loadGapi","loadGapiIframe","gapi","load","iframes","getContext","ontimeout","Iframe","cbName","js._generateCallbackName","js\r\n                ._loadJS","loadGapi","PING_TIMEOUT","IFRAME_ATTRIBUTES","height","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","_openIframe","gapiLoader._loadGapi","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","clearTimerAndResolve","networkErrorTimer","restyle","setHideOnLeave","networkError","ping","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","TARGET_BLANK","FIREFOX_EMPTY_URL","AuthPopup","_open","screen","availHeight","availWidth","scrollbars","optionsString","reduce","accum","openAsNewWindowIOS","newWin","focus","click","createEvent","initMouseEvent","dispatchEvent","WIDGET_PATH","EMULATOR_WIDGET_PATH","_getRedirectUrl","authType","redirectUrl","additionalParams","setDefaultLanguage","getCustomParameters","getScopes","tid","paramsDict","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","initAndGetManager","register","iframeEvent","authEvent","onEvent","send","originValidationPromises","_validateOrigin","browserPopupRedirectResolver","PhoneMultiFactorAssertionImpl","finalizeEnrollPhoneMfa","phoneVerificationInfo","finalizeSignInPhoneMfa","factorId","_finalizeEnroll","_finalizeSignIn","_fromCredential","AuthInterop","internalListeners","assertAuthConfigured","unsubscribe","updateProactiveRefresh","authIdTokenMaxAge","lastPostedIdToken","mintCookieFactory","idTokenResult","idTokenAge","getAuth","authTokenSyncUrl","mintCookie","authEmulatorHost","authInstance","hierarchy","_updateErrorMap","_initializeWithPersistence","_initializeAuthInstance","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","getVersionForPlatform","d","t","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","y","g","E","I","A","R","P","V","$","D","F","x","S","q","O","C","U","B","Q","enqueueRetryable","z","changeListener","W","onInit","getUid","G","h","getAuthHeaderValueForFirstParty","l","K","Y","appCheck","J","s","databaseId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","database","Z","segments","offset","len","comparator","limit","construct","tt","toArray","canonicalString","et","nt","isValidIdentifier","rt","popLast","lastSegment","fromString","popFirst","emptyPath","st","it","isDocumentKey","ot","ut","ct","ht","lt","dt","wt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","pt","statusText","databaseInfo","T","yt","crypto","msCrypto","Uint8Array","getRandomValues","gt","_t","vt","every","bt","Et","It","binaryString","EMPTY_BYTE_STRING","Tt","At","nanos","Rt","Pt","fromBase64String","fromUint8Array","Vt","nanoseconds","toMillis","padStart","fromMillis","$t","mapValue","fields","__type__","stringValue","Nt","__previous_value__","Dt","__local_write_time__","timestampValue","Ft","xt","St","booleanValue","isEqual","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","arrayValue","qt","Ot","kt","compareTo","Ct","Lt","Mt","Ut","jt","Bt","Qt","inclusive","Wt","Gt","field","matchesComparison","isInequality","isKeyField","createKeyFieldInFilter","Ht","te","ee","ne","re","Jt","Xt","Kt","filters","concat","getFlattenedFilters","fromName","Zt","nullValue","se","dir","oe","timestamp","_compareTo","ue","root","ae","EMPTY","insert","copy","BLACK","remove","right","minKey","maxKey","inorderTraversal","reverseTraversal","ce","isReverse","nodeStack","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","he","getIteratorFrom","hasNext","getNext","getIterator","le","fe","isPrefixOf","de","getFieldsMap","isImmediateParentOf","applyChanges","we","documentType","readTime","createTime","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","me","collectionGroup","orderBy","startAt","endAt","pe","ye","explicitOrderBy","limitType","ge","_e","getFirstInequalityField","ve","be","keyField","Ee","Ie","Ae","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Re","Pe","Ve","elements","$e","Ne","Fe","updateTime","exists","xe","Se","precondition","fieldTransforms","qe","fieldMask","Oe","ke","Ce","asc","Le","in","Me","and","or","Ue","je","Be","toBase64","toUint8Array","Qe","toTimestamp","ze","fromTimestamp","We","child","Ge","Ke","cn","Ye","He","Je","Ze","update","updateMask","un","updateTransforms","transform","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","tn","structuredQuery","parent","collectionId","allDescendants","on","sn","direction","en","before","nn","rn","unaryFilter","fieldFilter","getFilters","compositeFilter","fieldPaths","an","ln","authCredentials","appCheckCredentials","connection","invalidateToken","writes","newFoundDocument","pn","yn","_terminated","_databaseId","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","gn","credentials","ignoreUndefinedProperties","cacheSizeBytes","_n","_app","_settings","_settingsFrozen","_terminateTask","client","sessionIndex","iamToken","authTokenFactory","_terminate","terminate","bn","_initialized","En","_getSettings","_setSettings","mockUserToken","Pn","converter","firestore","$n","Vn","_query","_path","Nn","qn","_byteString","On","_internalPath","Cn","_methodName","Ln","isFinite","_lat","_long","Mn","Un","Bn","Qn","hr","at","zn","Wn","Gn","merge","mergeFields","sr","ur","lr","covers","nr","rr","ir","_toFieldTransform","fromDate","ar","cr","search","fr","_firestore","_userDataWriter","_document","_converter","dr","fromFirestore","convertValue","pr","wr","_docs","docs","yr","gr","_r","Er","vr","_apply","_field","_op","_value","_parse","Lr","Cr","kr","br","_create","_queryConstraints","_getOperator","Mr","jr","toFirestore","Br","convertDocumentKey","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","zr","wn","Yr","N","Fn","toMutation","setMultipleInstances"],"sourceRoot":""}