{"version":3,"file":"static/js/Categories.36a8ca13.chunk.js","mappings":"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","sources":["apis/firebase/firebase-config.ts","webpack://snowball-app/./src/components/button/button.module.css?a294","components/button/Button.tsx","webpack://snowball-app/./src/components/input/input.module.css?b4c0","components/input/Input.tsx","webpack://snowball-app/./src/components/title/title.module.css?9114","components/title/Title.tsx","webpack://snowball-app/./src/components/card/card.module.css?8c6d","components/card/index.tsx","components/card/Card.tsx","components/card/Card-header.tsx","components/card/Card-body.tsx","apis/firebase/categories.ts","pages/categories/useCategories.tsx","hooks/useForm.tsx","pages/categories/Categories.tsx"],"sourcesContent":["import { getFirestore } from \"firebase/firestore/lite\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  browserLocalPersistence,\r\n  getAuth,\r\n  setPersistence,\r\n} from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APPKEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nexport const firebaseApp = initializeApp(firebaseConfig);\r\nexport const dataBase = getFirestore(firebaseApp);\r\nexport const firebaseAuth = getAuth();\r\n\r\nsetPersistence(firebaseAuth, browserLocalPersistence);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"button_buttonContainer__kBtgO\",\"right\":\"button_right__R9ehz\",\"button\":\"button_button__NK6DB\"};","import styles from \"./button.module.css\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\ninterface Props {\r\n  position?: \"br\";\r\n  type?: \"submit\" | \"reset\";\r\n  value: string;\r\n}\r\n\r\nexport const Button = ({ position, type = \"submit\", value }: Props) => {\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <div\r\n      className={`${styles.buttonContainer} ${\r\n        position === \"br\" && styles.right\r\n      }`}\r\n    >\r\n      <button className={styles.button} type={type}>\r\n        {formatMessage({ id: value })}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_input__FenGj\",\"label\":\"input_label__12No9\",\"text\":\"input_text__jkBlA\"};","import { useIntl } from \"react-intl\";\r\n\r\nimport styles from \"./input.module.css\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  name: string;\r\n  placeholder?: string;\r\n  type?: \"text\" | \"password\" | \"number\" | \"email\";\r\n  value: string;\r\n  onChange: React.ChangeEventHandler<HTMLInputElement> | undefined;\r\n}\r\n\r\nexport const Input = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  type,\r\n  value,\r\n  onChange,\r\n}: Props) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div className={styles.input}>\r\n      <label className={styles.label}>{formatMessage({ id: label })}</label>\r\n      <input\r\n        className={styles.text}\r\n        name={name}\r\n        placeholder={formatMessage({ id: placeholder })}\r\n        type={type}\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__QoSf+\",\"left\":\"title_left__6pFlm\",\"center\":\"title_center__N1p6Y\"};","import { useIntl } from \"react-intl\";\r\n\r\nimport styles from \"./title.module.css\";\r\n\r\ninterface Props {\r\n  position?: \"tl\" | \"tc\";\r\n  value: string;\r\n}\r\n\r\nexport const Title = ({ position = \"tl\", value }: Props) => {\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <h4\r\n      className={`${styles.title} ${\r\n        position === \"tl\" ? styles.left : styles.center\r\n      }`}\r\n    >\r\n      {formatMessage({ id: value })}\r\n    </h4>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"card_cardContainer__JHyMU\",\"cardHeader\":\"card_cardHeader__ngCNl\",\"cardBody\":\"card_cardBody__MxKbH\"};","import { Card as CardHOC } from \"./Card\";\r\nimport { CardBody } from \"./Card-body\";\r\nimport { CardHeader } from \"./Card-header\";\r\nimport { CardHOCProps } from \"../interfaces/card\";\r\n\r\nconst Card: CardHOCProps = Object.assign(CardHOC, {\r\n  Header: CardHeader,\r\n  Body: CardBody,\r\n});\r\n\r\nexport default Card;\r\n","import type { ReactElement } from \"react\";\r\nimport styles from \"./card.module.css\";\r\n\r\nexport interface Props {\r\n  children: ReactElement | ReactElement[];\r\n}\r\n\r\nexport const Card = ({ children }: Props) => {\r\n  return <div className={styles.cardContainer}>{children}</div>;\r\n};\r\n","import { ReactElement } from \"react\";\r\n\r\nimport styles from \"./card.module.css\";\r\n\r\nexport interface Props {\r\n  children: ReactElement | ReactElement[];\r\n}\r\n\r\nexport const CardHeader = ({ children }: Props) => {\r\n  return <div className={styles.cardHeader}>{children}</div>;\r\n};\r\n","import type { ReactElement } from \"react\";\r\nimport styles from \"./card.module.css\";\r\n\r\nexport interface Props {\r\n  children: ReactElement | ReactElement[];\r\n}\r\n\r\nexport const CardBody = ({ children }: Props) => {\r\n  return <div className={styles.cardBody}>{children}</div>;\r\n};\r\n","import {\r\n  addDoc,\r\n  collection,\r\n  DocumentData,\r\n  getDocs,\r\n  query,\r\n  QuerySnapshot,\r\n  where,\r\n} from \"firebase/firestore/lite\";\r\nimport { dataBase } from \"../../apis/firebase/firebase-config\";\r\nimport { Categories } from \"../../interfaces/categories\";\r\n\r\nconst categories = collection(dataBase, \"categories\");\r\n\r\nexport const create = async (category: Categories) => {\r\n  const data = await addDoc(categories, { ...category });\r\n\r\n  return data.id;\r\n};\r\n\r\nexport const getCategoriesByCategory = async (category: Categories) => {\r\n  const result = await getDocs(\r\n    query(categories, where(\"category\", \"==\", category.category))\r\n  );\r\n\r\n  return getArrayFromCollection(result);\r\n};\r\n\r\nconst getArrayFromCollection = (collection: QuerySnapshot<DocumentData>) => {\r\n  return collection.docs.map((doc) => {\r\n    return { ...doc.data(), id: doc.id };\r\n  });\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport {\r\n  create,\r\n  getCategoriesByCategory,\r\n} from \"../../apis/firebase/categories\";\r\n\r\nexport const useCategories = () => {\r\n  const { category, onChange } = useForm({\r\n    category: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    hasError: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const onSubmitSave = async (e: any) => {\r\n    e.preventDefault();\r\n    if (category.length <= 0)\r\n      return setError({\r\n        hasError: true,\r\n        message: \"app.categories-error-empty\",\r\n      });\r\n\r\n    const getCategory = await getCategoriesByCategory({ category });\r\n    if (getCategory.length > 0)\r\n      return setError({\r\n        hasError: true,\r\n        message: \"app.categories-error-exist\",\r\n      });\r\n\r\n    const saveCategory = await create({ category });\r\n    if (!saveCategory)\r\n      return setError({\r\n        hasError: true,\r\n        message: \"app.categories-error-save\",\r\n      });\r\n\r\n    setError({\r\n      hasError: false,\r\n      message: \"\",\r\n    });\r\n    onChange(\"\", \"category\");\r\n  };\r\n\r\n  return {\r\n    category,\r\n    error,\r\n    onChange,\r\n    onSubmitSave,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nexport const useForm = <T extends Object>(formFields: T) => {\r\n  const [formData, setFormData] = useState(formFields);\r\n\r\n  const onChange = (value: string, field: keyof T) => {\r\n    setFormData({\r\n      ...formData,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  return {\r\n    ...formData,\r\n    onChange,\r\n  };\r\n};\r\n","import { Card, Button, Input, Title } from \"../../components\";\r\nimport { useCategories } from \"./useCategories\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nconst Categories = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { category, error, onChange, onSubmitSave } = useCategories();\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Title value=\"app.categories-title\" />\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <form onSubmit={onSubmitSave}>\r\n          <Input\r\n            label=\"app.category-label\"\r\n            name=\"categorie\"\r\n            placeholder=\"app.category-label\"\r\n            type=\"text\"\r\n            value={category}\r\n            onChange={({ target }) => onChange(target.value, \"category\")}\r\n          />\r\n\r\n          <Button position=\"br\" value=\"app.button-save\" />\r\n          {error.hasError && (\r\n            <div>{formatMessage({ id: error.message }, { category })}</div>\r\n          )}\r\n        </form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dataBase","getFirestore","firebaseAuth","getAuth","setPersistence","browserLocalPersistence","Button","position","type","value","formatMessage","useIntl","className","styles","id","Input","label","name","placeholder","onChange","Title","Object","assign","children","Header","Body","categories","collection","create","category","addDoc","data","getCategoriesByCategory","getDocs","query","where","result","getArrayFromCollection","docs","map","doc","useCategories","formFields","useState","formData","setFormData","field","useForm","hasError","message","error","setError","onSubmitSave","e","preventDefault","length","onSubmit","target"],"sourceRoot":""}